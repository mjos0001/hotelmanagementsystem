/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hmsFrame;

import hmsDataService.BookingDataService;
import hmsDataService.CustomerDataService;
import hmsDataService.GuestDataService;
import hmsDataService.HotelDataService;
import hmsDataService.MembershipDataService;
import hmsDataService.PaymentDataService;
import hmsDataService.RoomDataService;
import hmsDataService.*;
import hmsModel.*;
import hmsService.*;

import java.util.*;
import java.text.SimpleDateFormat;
import javax.persistence.EntityManagerFactory;
import javax.swing.*;
import java.util.concurrent.TimeUnit;

/**
 *
 * @author mrkjse
 */
public class BookingCreator extends javax.swing.JFrame {

    /**
     * Creates new form BookingCreator
     */
    public BookingCreator(ArrayList<EntityManagerFactory> emfList) {
        initComponents();

        try {
            jTabbedPane3.setEnabledAt(1, false);
            jTabbedPane3.setEnabledAt(2, false);
            jTabbedPane3.setEnabledAt(3, false);
            jTabbedPane3.setEnabledAt(4, false);
            jTabbedPane3.setEnabledAt(5, false);

            emfactoryList = emfList;

            allocatorService = new RoomAllocatorService(emfactoryList.get(1));
            hds = new HotelDataService(emfactoryList.get(0));
            hotels = new ArrayList<>(hds.getHotels());

            cds = new CustomerDataService(emfactoryList.get(1));
            customers = new ArrayList<>(cds.getCustomers());

            bds = new BookingDataService(emfactoryList.get(1));
            gds = new GuestDataService(emfactoryList.get(1));
            pds = new PaymentDataService(emfactoryList.get(1));

            fillUpBookingComboBoxes();
        } catch (Exception e) {

        }
    }

    ArrayList<EntityManagerFactory> emfactoryList = null;

    boolean firstTabDone = false;
    boolean secondTabDone = false;
    boolean thirdTabDone = false;
    boolean fourthTabDone = false;

    ArrayList<GuestForm> guestForms = new ArrayList<>();
    ArrayList<PaymentForm> paymentForms = new ArrayList<>();

    RoomAllocatorService allocatorService = null;
    HotelDataService hds = null;
    CustomerDataService cds = null;
    BookingDataService bds = null;
    GuestDataService gds = null;
    PaymentDataService pds = null;

    ArrayList<Hotel> hotels = null;
    ArrayList<Customer> customers = null;
    ArrayList<Room> rooms = null;
    ArrayList<Room> takenRooms = null;
    ArrayList<Guest> guests = null;

    Customer customer = null;
    SearchRoomRequest roomRequest = null;

    ArrayList<RoomChoice> roomChoices = null;
    ArrayList<BookingRoomGuest> bookingRoomGuests = null;

    Booking booking = new Booking();

    int maxOccupancy = 0;
    int numOfGuests = 0;
    int numOfPayments = 0;
    double totalCost = 0.0;
    double totalPaid = 0.0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nextPage1 = new javax.swing.JButton();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnSubmitSearchRequest = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        textCheckInDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textCheckOutDate = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbSingle = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cbDouble = new javax.swing.JCheckBox();
        cbQuadruple = new javax.swing.JCheckBox();
        cbDeluxe = new javax.swing.JCheckBox();
        cbSuite = new javax.swing.JCheckBox();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        hotelLabel = new javax.swing.JLabel();
        hotelComboBox = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        textMinPrice = new javax.swing.JTextField();
        textMaxPrice = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        submitRoomChoiceBtn = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        textMaxOccupancy = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        singleComboBox = new javax.swing.JComboBox<>();
        doubleComboBox = new javax.swing.JComboBox<>();
        quadComboBox = new javax.swing.JComboBox<>();
        deluxeComboBox = new javax.swing.JComboBox<>();
        suiteComboBox = new javax.swing.JComboBox<>();
        textNumGuests = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        customerComboBox = new javax.swing.JComboBox<>();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        textContactPerson = new javax.swing.JTextField();
        textContactEmail = new javax.swing.JTextField();
        submitContactBtn = new javax.swing.JButton();
        totalAmountlabel = new javax.swing.JLabel();
        textTotalAmount = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        submitGuestBtn = new javax.swing.JButton();
        guestTabbedPane = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        submitPaymentBtn = new javax.swing.JButton();
        paymentTabbedPane = new javax.swing.JTabbedPane();
        addPaymentBtn = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        textBookingId = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        closeCreateBookingBtn = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        textTotalAmountFinal = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        textBalanceDue = new javax.swing.JTextField();
        jlabel1000 = new javax.swing.JLabel();
        textBookingStatus = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        nextPage1.setText("Next");
        nextPage1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextPage1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane3.setToolTipText("");

        btnSubmitSearchRequest.setText("Submit Room Request");
        btnSubmitSearchRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitSearchRequestActionPerformed(evt);
            }
        });

        jLabel2.setText("Check In Date");

        jLabel3.setText("required; use yyyy-mm-dd format");

        jLabel4.setText("Check Out Date");

        jLabel5.setText("required; use yyyy-mm-dd format");

        jLabel6.setText("Room Type");

        cbSingle.setSelected(true);
        cbSingle.setText("Single");

        jLabel7.setText("Minimum Amount");

        jLabel8.setText("Maximum Amount");

        cbDouble.setText("Double");

        cbQuadruple.setSelected(true);
        cbQuadruple.setText("Quadruple");

        cbDeluxe.setText("Deluxe");

        cbSuite.setText("Suite");

        jLabel9.setText("optional");

        jLabel10.setText("optional");

        jLabel11.setText("optional");

        hotelLabel.setText("Hotel");

        hotelComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        hotelComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hotelComboBoxActionPerformed(evt);
            }
        });

        jLabel20.setText("optional");
        jLabel20.setToolTipText("");

        textMaxPrice.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSubmitSearchRequest)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textCheckInDate)
                            .addComponent(textCheckOutDate, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(120, 120, 120))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(hotelLabel))
                        .addGap(18, 24, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(cbSingle)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbDouble)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbQuadruple)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbDeluxe)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbSuite)
                                .addGap(50, 50, 50)
                                .addComponent(jLabel9))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(hotelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel20))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textMinPrice)
                                    .addComponent(textMaxPrice))
                                .addGap(243, 243, 243)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addContainerGap(151, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textCheckInDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textCheckOutDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbSingle)
                    .addComponent(cbDouble)
                    .addComponent(cbQuadruple)
                    .addComponent(cbDeluxe)
                    .addComponent(cbSuite)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10)
                    .addComponent(textMinPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel11)
                    .addComponent(textMaxPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(hotelComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(hotelLabel))
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 182, Short.MAX_VALUE)
                .addComponent(btnSubmitSearchRequest)
                .addGap(26, 26, 26))
        );

        jTabbedPane3.addTab("Request for a room", jPanel1);

        jPanel2.setEnabled(false);

        submitRoomChoiceBtn.setText("Submit Room Choices");
        submitRoomChoiceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitRoomChoiceBtnActionPerformed(evt);
            }
        });

        jLabel12.setText("Room Choices - select the number of available rooms based on the room type");

        jLabel13.setText(" Single Rooms (SGL) - 1 pax per room");

        jLabel14.setText("Double (DBL) Rooms - 2 pax per room");

        jLabel15.setText("Quadruple (QPL) Rooms - 4 pax per room");

        jLabel16.setText("Deluxe (DLX) Rooms - 4 pax per room");

        jLabel17.setText("Suites (STE) - 6 pax per room");

        jLabel18.setText("Maximum Number of Guests");

        textMaxOccupancy.setEditable(false);
        textMaxOccupancy.setText("0");
        textMaxOccupancy.setEnabled(false);

        jLabel19.setText("Total Number of Guests");
        jLabel19.setToolTipText("");

        singleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        singleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleComboBoxActionPerformed(evt);
            }
        });

        doubleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        doubleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doubleComboBoxActionPerformed(evt);
            }
        });

        quadComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        quadComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quadComboBoxActionPerformed(evt);
            }
        });

        deluxeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        deluxeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deluxeComboBoxActionPerformed(evt);
            }
        });

        suiteComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        suiteComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suiteComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(singleComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(doubleComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(quadComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deluxeComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(suiteComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(jLabel16)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14)
                            .addComponent(jLabel13)))
                    .addComponent(jLabel12)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textMaxOccupancy, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
                            .addComponent(textNumGuests))))
                .addContainerGap(268, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitRoomChoiceBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(singleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(doubleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(quadComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(deluxeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(suiteComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(textMaxOccupancy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(textNumGuests, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                .addComponent(submitRoomChoiceBtn)
                .addGap(23, 23, 23))
        );

        jTabbedPane3.addTab("Make room selection", jPanel2);

        jLabel21.setText("Customer ");

        customerComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel22.setText("Contact Person");

        jLabel23.setText("Contact Email");

        submitContactBtn.setText("Submit Contact Details");
        submitContactBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitContactBtnActionPerformed(evt);
            }
        });

        totalAmountlabel.setText("Total Cost");

        textTotalAmount.setEnabled(false);

        jLabel24.setText("AUD");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(submitContactBtn)
                .addGap(62, 62, 62))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(jLabel22)
                    .addComponent(jLabel23)
                    .addComponent(totalAmountlabel))
                .addGap(37, 37, 37)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(customerComboBox, 0, 192, Short.MAX_VALUE)
                        .addComponent(textContactPerson)
                        .addComponent(textContactEmail))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(textTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24)))
                .addContainerGap(394, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(customerComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(textContactPerson, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(textContactEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalAmountlabel)
                    .addComponent(textTotalAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 233, Short.MAX_VALUE)
                .addComponent(submitContactBtn)
                .addGap(34, 34, 34))
        );

        jTabbedPane3.addTab("Booking Details", jPanel6);

        jPanel3.setEnabled(false);

        submitGuestBtn.setText("Submit Guest Information");
        submitGuestBtn.setToolTipText("");
        submitGuestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitGuestBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(guestTabbedPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 546, Short.MAX_VALUE)
                        .addComponent(submitGuestBtn)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(guestTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 404, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(submitGuestBtn)
                .addGap(24, 24, 24))
        );

        jTabbedPane3.addTab("Fill up Guest Details", jPanel3);

        jPanel4.setEnabled(false);

        submitPaymentBtn.setText("Submit Payments");
        submitPaymentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitPaymentBtnActionPerformed(evt);
            }
        });

        addPaymentBtn.setText("Add New Payment");
        addPaymentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPaymentBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(paymentTabbedPane)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGap(0, 588, Short.MAX_VALUE)
                        .addComponent(submitPaymentBtn)
                        .addGap(6, 6, 6))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(addPaymentBtn)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(paymentTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addPaymentBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addComponent(submitPaymentBtn)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Add Payment", jPanel4);

        jPanel5.setEnabled(false);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel25.setText("Congratulations! You have now made your booking.");
        jLabel25.setToolTipText("");

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel26.setText("Check the previous tabs for details.");

        textBookingId.setEnabled(false);

        jLabel27.setText("Booking ID");

        closeCreateBookingBtn.setText("Close this window");
        closeCreateBookingBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeCreateBookingBtnActionPerformed(evt);
            }
        });

        jLabel28.setText("Total Amount");

        textTotalAmountFinal.setEnabled(false);

        jLabel29.setText("Balance Due");

        textBalanceDue.setEnabled(false);

        jlabel1000.setText("Payment Status");

        textBookingStatus.setEnabled(false);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(closeCreateBookingBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(jLabel28)
                            .addComponent(jLabel29))
                        .addGap(36, 36, 36)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textBookingId)
                            .addComponent(textTotalAmountFinal)
                            .addComponent(textBalanceDue, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                        .addGap(132, 132, 132)
                        .addComponent(jlabel1000)
                        .addGap(18, 18, 18)
                        .addComponent(textBookingStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(145, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textBookingId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27)
                    .addComponent(jlabel1000)
                    .addComponent(textBookingStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(textTotalAmountFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(textBalanceDue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel26)
                .addGap(32, 32, 32)
                .addComponent(closeCreateBookingBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(203, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Booking Confirmation", jPanel5);

        jButton6.setText("Cancel New Booking");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Create A Booking");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jButton6))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jTabbedPane3)
                .addGap(29, 29, 29)
                .addComponent(jButton6)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextPage1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextPage1ActionPerformed
        // TODO add your handling code here:
        jTabbedPane3.setEnabledAt(1, true);
    }//GEN-LAST:event_nextPage1ActionPerformed

    private void btnSubmitSearchRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitSearchRequestActionPerformed
        // TODO add your handling code here:

        // TODO Verify if the request is ok
        boolean hasError = false;
        String error = "";

        roomRequest = new SearchRoomRequest();

        try {
            SimpleDateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
            Date date1 = fmt.parse(textCheckInDate.getText());
            Date date2 = fmt.parse(textCheckOutDate.getText());
            roomRequest.setCheckInDate(date1);
            roomRequest.setCheckOutDate(date2);

            if (date1.compareTo(new Date()) < 0) {
                hasError = true;
                error += "Error - selected date has already passed.\n";
            }

            if (date1.compareTo(date2) > 0) {
                hasError = true;
                error += "Error - Check in date is later than check out date.\n";
            }

        } catch (Exception e) {
            // Add error to error strings
            hasError = true;
            error += "Error in parsing dates.\n";
        }

        ArrayList<String> roomTypes = new ArrayList<>();

        if (cbSingle.isSelected()) {
            roomTypes.add("SGL");
        }

        if (cbDouble.isSelected()) {
            roomTypes.add("DBL");
        }

        if (cbQuadruple.isSelected()) {
            roomTypes.add("QPL");
        }

        if (cbDeluxe.isSelected()) {
            roomTypes.add("DLX");
        }

        if (cbSuite.isSelected()) {
            roomTypes.add("STE");
        }

        roomRequest.setRoomTypeCode(roomTypes);

        try {
            String a = textMinPrice.getText();
            String b = textMaxPrice.getText();

            int minAmount = 0;
            int maxAmount = 0;

            if (!a.isEmpty()) {
                minAmount = Integer.parseInt(a);
            }

            if (!b.isEmpty()) {
                maxAmount = Integer.parseInt(b);
            }
            roomRequest.setMinPrice(minAmount);
            roomRequest.setMaxPrice(maxAmount);

        } catch (Exception e) {
            hasError = true;
            error += "Error in parsing minimum or maximum amounts.\n";
        }

        try {
            int hotelId = Integer.parseInt(hotelComboBox.getSelectedItem().toString().split("-")[0]);
            roomRequest.setHotelId(hotelId);
        } catch (Exception e) {
            hasError = true;
            error += "Error in parsing hotel id.\n";
        }

        if (!hasError) {
            try {
                rooms = allocatorService.findAvailableRooms(roomRequest);
            } catch (Exception e) {
                hasError = true;
                error += "Error in finding available rooms.\n";
            }
        }

        if (!hasError) {
            fillUpRoomChoiceComboBoxes();
            jTabbedPane3.setEnabledAt(1, true);
            jTabbedPane3.setSelectedIndex(1);
        } else {
            JOptionPane.showMessageDialog(this, error);
        }
    }//GEN-LAST:event_btnSubmitSearchRequestActionPerformed

    private void fillUpBookingComboBoxes() {
        ArrayList<String> customerString = new ArrayList<>();

        for (Customer c : customers) {
            String a = c.getCustomerId() + "-" + c.getFirstName() + " " + c.getLastName();
            customerString.add(a);
        }

        ArrayList<String> hotelString = new ArrayList<>();
        hotelString.add("None");

        for (Hotel c : hotels) {
            String a = c.getHotelId() + "-" + c.getHotelName();
            hotelString.add(a);
        }

        DefaultComboBoxModel custCBModel = new DefaultComboBoxModel(customerString.toArray());
        DefaultComboBoxModel hotelCBModel = new DefaultComboBoxModel(hotelString.toArray());

        customerComboBox.setModel(custCBModel);
        customerComboBox.repaint();

        hotelComboBox.setModel(hotelCBModel);
        hotelComboBox.repaint();
    }

    private void fillUpRoomChoiceComboBoxes() {
        int singleRooms = 0;
        int doubleRooms = 0;
        int quadrupleRooms = 0;
        int deluxeRooms = 0;
        int suiteRooms = 0;

        singleRooms = FinderService.findRoomByRoomType(rooms, "SGL").size();
        doubleRooms = FinderService.findRoomByRoomType(rooms, "DBL").size();
        quadrupleRooms = FinderService.findRoomByRoomType(rooms, "QPL").size();
        deluxeRooms = FinderService.findRoomByRoomType(rooms, "DLX").size();
        suiteRooms = FinderService.findRoomByRoomType(rooms, "STE").size();

        ArrayList<String> singleString = new ArrayList<>();

        for (int i = 0; i <= singleRooms; i++) {
            singleString.add(Integer.toString(i));
        }

        ArrayList<String> doubleString = new ArrayList<>();

        for (int i = 0; i <= doubleRooms; i++) {
            doubleString.add(Integer.toString(i));
        }

        ArrayList<String> quadString = new ArrayList<>();

        for (int i = 0; i <= quadrupleRooms; i++) {
            quadString.add(Integer.toString(i));
        }

        ArrayList<String> deluxeString = new ArrayList<>();

        for (int i = 0; i <= deluxeRooms; i++) {
            deluxeString.add(Integer.toString(i));
        }

        ArrayList<String> suiteString = new ArrayList<>();

        for (int i = 0; i <= suiteRooms; i++) {
            suiteString.add(Integer.toString(i));
        }

        DefaultComboBoxModel singleCBModel = new DefaultComboBoxModel(singleString.toArray());
        DefaultComboBoxModel doubleCBModel = new DefaultComboBoxModel(doubleString.toArray());
        DefaultComboBoxModel quadCBModel = new DefaultComboBoxModel(quadString.toArray());
        DefaultComboBoxModel deluxeCBModel = new DefaultComboBoxModel(deluxeString.toArray());
        DefaultComboBoxModel suiteCBModel = new DefaultComboBoxModel(suiteString.toArray());

        singleComboBox.setModel(singleCBModel);
        singleComboBox.repaint();

        doubleComboBox.setModel(doubleCBModel);
        doubleComboBox.repaint();

        quadComboBox.setModel(quadCBModel);
        quadComboBox.repaint();

        deluxeComboBox.setModel(deluxeCBModel);
        deluxeComboBox.repaint();

        suiteComboBox.setModel(suiteCBModel);
        suiteComboBox.repaint();

    }

    private void calculateTotalCost() {
        takenRooms = new ArrayList<>();
        ArrayList<Room> availableRooms = new ArrayList<>(rooms);

        totalCost = 0;

        for (RoomChoice rc : roomChoices) {
            int qty = rc.getAllocatedGuests();
            String code = rc.getRoomTypeCode();

            try {
                ArrayList<Room> aRoomByType = FinderService.findRoomByRoomType(availableRooms, code);

                for (int i = 0; i < qty; i++) {
                    try {
                        Room takenRoom = aRoomByType.get(aRoomByType.size() - 1);
                        totalCost += takenRoom.getRoomPrice();
                        // remove the room we'll take
                        takenRooms.add(takenRoom);
                    } catch (Exception e) {

                    }

                }

                Date date1 = roomRequest.getCheckInDate();
                Date date2 = roomRequest.getCheckOutDate();

                long diff = date1.getTime() - date2.getTime();
                long noOfDays = TimeUnit.DAYS.convert(diff, TimeUnit.MILLISECONDS);
                long duration = Math.abs(TimeUnit.DAYS.toDays(noOfDays));

                totalCost *= duration;
            } catch (Exception e) {

            }
        }
    }

    private void calculateMaxOccupancy() {
        try {
            int sgl = Integer.parseInt(singleComboBox.getSelectedItem().toString());
            int dbl = Integer.parseInt(doubleComboBox.getSelectedItem().toString());
            int qpl = Integer.parseInt(quadComboBox.getSelectedItem().toString());
            int dlx = Integer.parseInt(deluxeComboBox.getSelectedItem().toString());
            int ste = Integer.parseInt(suiteComboBox.getSelectedItem().toString());

            maxOccupancy = (sgl * 1) + (dbl * 2) + (qpl * 4) + (dlx * 4) + (ste * 6);
            textMaxOccupancy.setText(Integer.toString(maxOccupancy));
            textMaxOccupancy.repaint();
        } catch (Exception e) {

        }
    }

    private void submitRoomChoiceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitRoomChoiceBtnActionPerformed
        // TODO add your handling code here:
        boolean hasError = false;
        String errors = "";

        try {
            numOfGuests = Integer.parseInt(textNumGuests.getText());

            if (numOfGuests > maxOccupancy) {
                hasError = true;
                errors += ("Number of guests cannot exceed max occupancy.\n");
            }

        } catch (Exception e) {
            hasError = true;
            errors += ("Error in reading number of guests.\n");
        }

        if (!hasError) {
            int sgl = Integer.parseInt(singleComboBox.getSelectedItem().toString());
            int dbl = Integer.parseInt(doubleComboBox.getSelectedItem().toString());
            int qpl = Integer.parseInt(quadComboBox.getSelectedItem().toString());
            int dlx = Integer.parseInt(deluxeComboBox.getSelectedItem().toString());
            int ste = Integer.parseInt(suiteComboBox.getSelectedItem().toString());

            roomChoices = new ArrayList<>();

            RoomChoice rc = null;

            if (sgl > 0) {
                rc = new RoomChoice();
                rc.setQuantity(sgl);
                rc.setRoomTypeCode("SGL");
                rc.setTotalMaxOccupancy(1 * sgl);
                roomChoices.add(rc);
            }

            if (dbl > 0) {
                rc = new RoomChoice();

                rc.setQuantity(dbl);
                rc.setRoomTypeCode("DBL");
                rc.setTotalMaxOccupancy(2 * dbl);

                roomChoices.add(rc);
            }

            if (qpl > 0) {
                rc = new RoomChoice();

                rc.setQuantity(qpl);
                rc.setRoomTypeCode("QPL");
                rc.setTotalMaxOccupancy(4 * qpl);

                roomChoices.add(rc);
            }

            if (dlx > 0) {
                rc = new RoomChoice();

                rc.setQuantity(dlx);
                rc.setRoomTypeCode("DLX");
                rc.setTotalMaxOccupancy(4 * dlx);

                roomChoices.add(rc);
            }

            if (ste > 0) {
                rc = new RoomChoice();

                rc.setQuantity(ste);
                rc.setRoomTypeCode("STE");
                rc.setTotalMaxOccupancy(6 * ste);

                roomChoices.add(rc);
            }

            try {
                roomChoices = allocatorService.allocateRoomPerGuest(roomChoices, numOfGuests);
            } catch (Exception e) {
                hasError = true;
                errors += "Error during room allocation for guests.\n";
            }

            String allocation = "You will be allocated:\n";

            for (RoomChoice a : roomChoices) {
                String line = (a.getRoomTypeCode() + "- " + Integer.toString(a.getAllocatedGuests()) + " guests \n");
                allocation += line;

            }

            JOptionPane.showMessageDialog(this, allocation);
        }

        if (!hasError) {
            calculateTotalCost();
            textTotalAmount.setText(Double.toString(totalCost));
            textTotalAmount.repaint();
            jTabbedPane3.setEnabledAt(2, true);
            // enable the boooking form
            jTabbedPane3.setSelectedIndex(2);
        } else {

            JOptionPane.showMessageDialog(this, errors);

        }
    }//GEN-LAST:event_submitRoomChoiceBtnActionPerformed

    private void submitGuestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitGuestBtnActionPerformed
        // TODO add your handling code here:

        String error = "";
        boolean hasError = false;

        guests = new ArrayList<>();

        for (GuestForm gf : guestForms) {

            String a = gf.getTextGuestCity().getText().toString();
            String b = gf.getTextGuestCountry().getText().toString();
            String c = gf.getTextGuestDateOfBirth().getText().toString();
            String d = gf.getTextGuestEmailAddress().getText().toString();
            String ee = gf.getTextGuestPhone().getText().toString();
            String f = gf.getTextGuestPostalCode().getText().toString();
            String gg = gf.getTextGuestStreet().getText().toString();
            String h = gf.getTextGuestTitle().getText().toString();

            if (a.isEmpty() || b.isEmpty() || c.isEmpty() || d.isEmpty() || ee.isEmpty() || f.isEmpty() || gg.isEmpty() || h.isEmpty()) {
                hasError = true;
                error += "Error - the form is incomplete.\n";
            }

            Guest newGuest = new Guest();
            newGuest.setBooking(booking);
            newGuest.setCity(gf.getTextGuestCity().getText().toString());
            newGuest.setCountry(gf.getTextGuestCountry().getText().toString());

            try {
                SimpleDateFormat fmt = new SimpleDateFormat("yyyy-MM-dd");
                Date date3 = fmt.parse(gf.getTextGuestDateOfBirth().getText().toString());
                newGuest.setDob(date3);
            } catch (Exception e) {
                hasError = true;
                error += "Error in parsing date of birth.\n";
            }

            if (hasError) {
                break;
            }

            newGuest.setEmailAddress(gf.getTextGuestEmailAddress().getText().toString());
            newGuest.setFirstName(gf.getTextGuestFirstName().getText().toString());
            newGuest.setLastName(gf.getTextGuestLastName().getText().toString());
            newGuest.setGuestId(0);
            newGuest.setPhoneNumber(gf.getTextGuestPhone().getText().toString());
            newGuest.setPostalCode(gf.getTextGuestPostalCode().getText().toString());
            newGuest.setStreet(gf.getTextGuestStreet().getText().toString());
            newGuest.setTitle(gf.getTextGuestTitle().getText().toString());

            try {
                int newId = gds.createGuest(newGuest);
                newGuest = gds.getGuestById(newId);
                guests.add(newGuest);
            } catch (Exception e) {
                hasError = true;
                error += "Error in creating guest.\n";

            }

            if (hasError) {
                break;
            }

        }

        ArrayList<BookingRoomGuestPK> brgPKList = allocatorService.createBookingRoomGuest(booking.getBookingId(), roomChoices, rooms, guests);
        ArrayList<Room> takenRooms = new ArrayList<>();

        if (brgPKList != null) {
            for (BookingRoomGuestPK brgPK : brgPKList) {
                BookingRoomGuest brg = new BookingRoomGuest(brgPK);

                Guest gst = FinderService.findGuestByGuestId(guests, brg.getBookingRoomGuestPK().getGuestId());

                brg.setBooking(booking);
                brg.setGuest(gst);
                Room r = FinderService.findRoomByRoomId(rooms, brgPK.getRoomId());
                brg.setRoom(r);

                try {
                    bds.createBookingRoomGuest(brg);
                } catch (Exception e) {
                    hasError = true;
                    error += "Error in adding BookingRoomGuest record.\n";
                }

                if (hasError) {
                    break;
                }
            }
        }

        if (!hasError) {
            paymentForms = new ArrayList<>();
            jTabbedPane3.setEnabledAt(4, true);
            jTabbedPane3.setSelectedIndex(4);
        }

        if (hasError) {
            JOptionPane.showMessageDialog(this, error);
        }

    }//GEN-LAST:event_submitGuestBtnActionPerformed

    private void submitPaymentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitPaymentBtnActionPerformed
        // TODO add your handling code here:
        String error = "";
        boolean hasError = false;
        int paymentNumber = 0;

        totalPaid = 0;

        for (PaymentForm pf : paymentForms) {
            String pmc = pf.getPaymentMethodComboBox().getSelectedItem().toString().split("-")[0];
            String amount = pf.getTextPaymentAmount().getText().toString();

            if (amount.isEmpty()) {
                hasError = true;
                error += "Error - incomplete form.\n";
            }

            if (hasError) {
                break;
            }

            double paymentAmount = 0;
            try {
                paymentAmount = Double.parseDouble(amount);
            } catch (Exception e) {
                hasError = true;
                error += "Error in parsing payment amount.\n";
            }

            totalPaid += paymentAmount;

            Payment p1 = new Payment(paymentNumber++, booking.getBookingId());
            p1.setBooking(booking);
            p1.setPaymentAmount(paymentAmount);
            p1.setCurrencyCode("AUD");
            p1.setPaymentMethodCode(pmc);
            p1.setPaymentDate(new Date());

            try {
                pds.createPayment(p1);
            } catch (Exception e) {
                hasError = true;
                error += "Error in adding payment.\n";
            }

        }

        if (totalPaid >= totalCost) {
            booking.setPaymentStatusCode("PD");

            try {
                bds.updateBooking(booking);
            } catch (Exception e) {
                hasError = true;
                error += "Error in updating booking.\n";
            }
        }

        if (!hasError) {
            textBookingId.setText(Integer.toString(booking.getBookingId()));
            textTotalAmountFinal.setText(Double.toString(totalCost));
            double balanceDue = totalCost - totalPaid;
            textBalanceDue.setText(Double.toString(balanceDue));

            String bookingStat = "UNPAID";

            if (booking.getPaymentStatusCode().equals("PD")) {
                bookingStat = "PAID";
            }

            textBookingStatus.setText(bookingStat);

            for (GuestForm gf : guestForms) {
                gf.getTextGuestCity().setEnabled(false);
                gf.getTextGuestCountry().setEnabled(false);
                gf.getTextGuestDateOfBirth().setEnabled(false);
                gf.getTextGuestEmailAddress().setEnabled(false);
                gf.getTextGuestFirstName().setEnabled(false);
                gf.getTextGuestLastName().setEnabled(false);
                gf.getTextGuestPhone().setEnabled(false);
                gf.getTextGuestPostalCode().setEnabled(false);
                gf.getTextGuestStreet().setEnabled(false);
                gf.getTextGuestTitle().setEnabled(false);
            }

            for (PaymentForm pf : paymentForms) {
                pf.getPaymentMethodComboBox().setEnabled(false);
                pf.getTextPaymentAmount().setEnabled(false);
            }

            textCheckInDate.setEnabled(false);
            textCheckOutDate.setEnabled(false);
            btnSubmitSearchRequest.setEnabled(false);
            submitRoomChoiceBtn.setEnabled(false);
            submitContactBtn.setEnabled(false);
            textContactPerson.setEnabled(false);
            textContactEmail.setEnabled(false);
            submitGuestBtn.setEnabled(false);
            submitPaymentBtn.setEnabled(false);
            addPaymentBtn.setEnabled(false);

            jTabbedPane3.setSelectedIndex(5);
        } else {
            JOptionPane.showMessageDialog(this, error);
        }


    }//GEN-LAST:event_submitPaymentBtnActionPerformed

    private void addPaymentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPaymentBtnActionPerformed
        // TODO add your handling code here:
        PaymentForm gf = new PaymentForm();
        paymentForms.add(gf);
        paymentTabbedPane.add(gf);
        int tabIndex = paymentTabbedPane.getTabCount();
        paymentTabbedPane.setTitleAt(tabIndex - 1, "Payment " + tabIndex);

    }//GEN-LAST:event_addPaymentBtnActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void singleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleComboBoxActionPerformed
        // TODO add your handling code here:
        calculateMaxOccupancy();
    }//GEN-LAST:event_singleComboBoxActionPerformed

    private void doubleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doubleComboBoxActionPerformed
        // TODO add your handling code here:
        calculateMaxOccupancy();
    }//GEN-LAST:event_doubleComboBoxActionPerformed

    private void quadComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quadComboBoxActionPerformed
        // TODO add your handling code here:
        calculateMaxOccupancy();
    }//GEN-LAST:event_quadComboBoxActionPerformed

    private void deluxeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deluxeComboBoxActionPerformed
        // TODO add your handling code here:
        calculateMaxOccupancy();
    }//GEN-LAST:event_deluxeComboBoxActionPerformed

    private void suiteComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suiteComboBoxActionPerformed
        // TODO add your handling code here:
        calculateMaxOccupancy();
    }//GEN-LAST:event_suiteComboBoxActionPerformed

    private void submitContactBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitContactBtnActionPerformed
        // TODO add your handling code here:
        String error = "";
        boolean hasError = false;

        int cusId = Integer.parseInt(customerComboBox.getSelectedItem().toString().split("-")[0]);

        Customer cust = FinderService.findCustomerByCustomerId(customers, cusId);

        try {
            Booking newBooking = new Booking();
            newBooking.setBookingId(0);
            newBooking.setCheckInDate(roomRequest.getCheckInDate());
            newBooking.setCheckOutDate(roomRequest.getCheckOutDate());
            newBooking.setCustomer(cust);
            newBooking.setContactPerson(textContactPerson.getText());
            newBooking.setContactEmail(textContactEmail.getText());
            
            // consider the discount
            long disc = cust.getMembership().getDiscount();
            
            if (disc > 0 && disc < 100)
            {
                totalCost *= (100 - disc)/100;
            }
            
            newBooking.setTotalAmount(totalCost);
            newBooking.setPaymentStatusCode("UP");
            newBooking.setCurrencyCode("AUD");

            int newId = bds.createBooking(newBooking);

            booking = bds.getBookingByBookingId(newId);
        } catch (Exception e) {
            hasError = true;
            error += "Error in creating a new booking. \n";
        }

        if (!hasError) {
            guestForms = new ArrayList<>();
            for (int i = 0; i < numOfGuests; i++) {
                GuestForm gf = new GuestForm();
                guestForms.add(gf);
                guestTabbedPane.add(gf);
                int tabIndex = guestTabbedPane.getTabCount();
                guestTabbedPane.setTitleAt(tabIndex - 1, "Guest " + tabIndex);

            }

            jTabbedPane3.setEnabledAt(3, true);
            jTabbedPane3.setSelectedIndex(3);
        } else {
            JOptionPane.showMessageDialog(this, error);
        }
    }//GEN-LAST:event_submitContactBtnActionPerformed

    private void closeCreateBookingBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeCreateBookingBtnActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);

    }//GEN-LAST:event_closeCreateBookingBtnActionPerformed

    private void hotelComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hotelComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hotelComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingCreator.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        DefaultDataService ddfs = new DefaultDataService();
        ArrayList<EntityManagerFactory> emfL = ddfs.LogIn();

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingCreator(emfL).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPaymentBtn;
    private javax.swing.JButton btnSubmitSearchRequest;
    private javax.swing.JCheckBox cbDeluxe;
    private javax.swing.JCheckBox cbDouble;
    private javax.swing.JCheckBox cbQuadruple;
    private javax.swing.JCheckBox cbSingle;
    private javax.swing.JCheckBox cbSuite;
    private javax.swing.JButton closeCreateBookingBtn;
    private javax.swing.JComboBox<String> customerComboBox;
    private javax.swing.JComboBox<String> deluxeComboBox;
    private javax.swing.JComboBox<String> doubleComboBox;
    private javax.swing.JTabbedPane guestTabbedPane;
    private javax.swing.JComboBox<String> hotelComboBox;
    private javax.swing.JLabel hotelLabel;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JLabel jlabel1000;
    private javax.swing.JButton nextPage1;
    private javax.swing.JTabbedPane paymentTabbedPane;
    private javax.swing.JComboBox<String> quadComboBox;
    private javax.swing.JComboBox<String> singleComboBox;
    private javax.swing.JButton submitContactBtn;
    private javax.swing.JButton submitGuestBtn;
    private javax.swing.JButton submitPaymentBtn;
    private javax.swing.JButton submitRoomChoiceBtn;
    private javax.swing.JComboBox<String> suiteComboBox;
    private javax.swing.JTextField textBalanceDue;
    private javax.swing.JTextField textBookingId;
    private javax.swing.JTextField textBookingStatus;
    private javax.swing.JTextField textCheckInDate;
    private javax.swing.JTextField textCheckOutDate;
    private javax.swing.JTextField textContactEmail;
    private javax.swing.JTextField textContactPerson;
    private javax.swing.JTextField textMaxOccupancy;
    private javax.swing.JTextField textMaxPrice;
    private javax.swing.JTextField textMinPrice;
    private javax.swing.JTextField textNumGuests;
    private javax.swing.JTextField textTotalAmount;
    private javax.swing.JTextField textTotalAmountFinal;
    private javax.swing.JLabel totalAmountlabel;
    // End of variables declaration//GEN-END:variables
}
